{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/shelljs/src sync /^/.//.*$","pages/Browse/BrowseDocumentModel.js","components/useWindowDimensions.js","contexts/PkContext.js","pages/Browse/VerseDetails.js","contexts/SettingsContext.js","components/PageToolBar.js","contexts/DocSetsContext.js","pages/Browse/BrowseTab.js","pages/Search/SearchResultsTools.js","pages/Search/SearchTab.js","components/ExploreContainer.tsx","pages/Edit/EditTab.js","pages/Publish/PublishTab.js","resources/sourceIndexes/online_sources.js","pages/Settings/AddRemote.js","pages/Settings/RemoveLocal.js","pages/Settings/StorageSettings.js","pages/Settings/AppearanceSettings.js","pages/Settings/SettingsTab.js","App.js","serviceWorkerRegistration.ts","reportWebVitals.ts","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","webpackContext","webpackContextResolve","BrowseDocumentModel","result","context","config","rendered","blockStack","currentChapter","currentVerses","addActions","require","ScriptureParaDocument","dInstance","addAction","renderer","nextKey","data","push","subType","to","pathname","state","newSearchString","payload","className","scopeName","split","scopeValue","slice","join","verseRef","selectedChapter","selectedVerses","selectedVerseRef","onClick","versesCallback","ref","pRef","length","topDocRef","key","sequenceStack","block","blockScope","getWindowDimensions","window","width","innerWidth","height","innerHeight","PkContext","React","createContext","Proskomma","PkProvider","Provider","xre","syntaxTreeToD3","tribosTree","children","name","content","elementType","text","class","JSON","stringify","attributes","gloss","filter","n","ch","d3TreeDepth","d3Tree","depth","Math","max","d3TreeLeaves","reduce","a","b","VerseDetails","currentDocSet","currentBookCode","setShowDetails","pk","useContext","useState","setResult","useEffect","doQuery","gqlQuery","res","refs","Set","resourceName","resourceCol","document","tableSequences","rows","row","match","linkPhrase","link","exec","startsWith","add","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","size","verseText","color","cv","cve","grcVerseText","translationNotes","r","replace","studyNotes","syntaxTree","treeSequences","verseTrees","parse","tr","style","min","orientation","separation","nonSiblings","siblings","nodeSize","x","y","translate","zoom","rootNodeClassName","branchNodeClassName","leafNodeClassName","SettingsContext","SettingsProvider","PageToolBar","pageTitle","settings","slot","enableNetworkAccess","icon","globe","routerLink","cog","DocSetsContext","DocSetsProvider","BrowseTab","setCurrentDocSet","setCurrentBookCode","setSelectedChapter","setSelectedVerses","currentDocId","docSets","renderedSequence","setRenderedSequence","showDetails","useRef","ScriptureParaModelQuery","resData","chapter","verses","model","ScriptureParaModel","docSetModel","ScriptureDocSet","addDocumentModel","addDocSetModel","render","current","scrollIntoView","value","disabled","onIonChange","detail","docSet","firstBookCode","documents","entries","dse","de","SearchResultTools","resultsPage","setResultsPage","nResultsPerPage","resultParaRecords","booksToSearch","fill","arrowBack","arrowForward","SearchTab","linkSearchString","setLinkSearchString","searchString","setSearchString","searchWaiting","setSearchWaiting","searchTerms","setSearchTerms","setBooksToSearch","setResultParaRecords","location","useLocation","terms","st","trim","searchDocumentMatchQuery","book","bookCode","bookToSearch","searchBlockMatchQuery","records","mainSequence","blocks","matches","m","matched","scopeLabels","sl","vns","parseInt","items","itemGroups","allParaRecords","options","placeholder","onKeyPress","search","trash","textAlign","SearchResultsTools","rr","fromVerse","toVerse","fontSize","fontWeight","ig","tokens","t","includes","ExploreContainer","target","rel","href","EditTab","fullscreen","PublishTab","onlineSources","uuid","btoa","AddRemote","toImport","setToImport","setLoadUuid","loadUuid","loadedDocSets","toDownload","setToDownload","doDownload","downloadRecord","newToImport","axiosInstance","Axios","create","defaults","headers","request","method","responseType","source","response","status","console","log","String","fromCharCode","apply","Uint8Array","format","zip","JSZip","loadAsync","all","bookCodes","bc","matchingFiles","files","zf","file","async","selectors","contentType","newUuid","v4","substring","succinctJson","TextDecoder","decode","sourceEntries","os","lds","lang","abbr","Array","from","d","docTypes","concat","description","forEach","doc","sourcePrefix","download","RemoveLocal","removeDocSet","docSetId","query","buttonsDisabled","setButtonsDisabled","StorageSettings","selectedSection","setSelectedSection","setLoadedDocSets","ds","s","expand","AppearanceSettings","SettingsTab","strong","albums","brush","App","setDocSets","importRecord","importDocument","addTsv","tsvJson","blocksSpecUtils","tsvToInputBlock","tsvQueryContent","blocksSpec2Query","stubUsfm","addDocument","docId","errors","loadSuccinctDocSet","dss","selector","exact","path","tab","print","Boolean","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"qIAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.e5619281.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t698,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t699,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t700,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t701,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t702,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t703,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t704,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t705,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t706,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t707,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t708,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t709,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t710,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t711,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t712,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t713,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t714,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t715,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t716,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t717,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t718,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t719,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t720,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t721,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t722,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t723,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t724,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t725,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t726,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t727,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t728,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t729,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t730,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t731,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t732,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t733,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t734,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t735,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t736,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t737,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t738,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t739,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t740,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 325;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t741,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 327;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./cat\": 269,\n\t\"./cat.js\": 269,\n\t\"./cd\": 193,\n\t\"./cd.js\": 193,\n\t\"./chmod\": 270,\n\t\"./chmod.js\": 270,\n\t\"./common\": 22,\n\t\"./common.js\": 22,\n\t\"./cp\": 194,\n\t\"./cp.js\": 194,\n\t\"./dirs\": 271,\n\t\"./dirs.js\": 271,\n\t\"./echo\": 272,\n\t\"./echo.js\": 272,\n\t\"./error\": 195,\n\t\"./error.js\": 195,\n\t\"./exec\": 273,\n\t\"./exec-child\": 274,\n\t\"./exec-child.js\": 274,\n\t\"./exec.js\": 273,\n\t\"./find\": 275,\n\t\"./find.js\": 275,\n\t\"./grep\": 276,\n\t\"./grep.js\": 276,\n\t\"./head\": 277,\n\t\"./head.js\": 277,\n\t\"./ln\": 278,\n\t\"./ln.js\": 278,\n\t\"./ls\": 198,\n\t\"./ls.js\": 198,\n\t\"./mkdir\": 279,\n\t\"./mkdir.js\": 279,\n\t\"./mv\": 280,\n\t\"./mv.js\": 280,\n\t\"./popd\": 281,\n\t\"./popd.js\": 281,\n\t\"./pushd\": 282,\n\t\"./pushd.js\": 282,\n\t\"./pwd\": 197,\n\t\"./pwd.js\": 197,\n\t\"./rm\": 199,\n\t\"./rm.js\": 199,\n\t\"./sed\": 283,\n\t\"./sed.js\": 283,\n\t\"./set\": 284,\n\t\"./set.js\": 284,\n\t\"./sort\": 285,\n\t\"./sort.js\": 285,\n\t\"./tail\": 286,\n\t\"./tail.js\": 286,\n\t\"./tempdir\": 196,\n\t\"./tempdir.js\": 196,\n\t\"./test\": 287,\n\t\"./test.js\": 287,\n\t\"./to\": 288,\n\t\"./to.js\": 288,\n\t\"./toEnd\": 289,\n\t\"./toEnd.js\": 289,\n\t\"./touch\": 290,\n\t\"./touch.js\": 290,\n\t\"./uniq\": 291,\n\t\"./uniq.js\": 291,\n\t\"./which\": 292,\n\t\"./which.js\": 292\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 646;","import {Link} from 'react-router-dom';\n\nconst {ScriptureParaDocument} = require('proskomma-render');\n\nclass BrowseDocumentModel extends ScriptureParaDocument {\n\n    constructor(result, context, config) {\n        super(result, context, config);\n        config.rendered = [];\n        config.blockStack = [];\n        config.currentChapter = null;\n        config.currentVerses = null;\n        addActions(this);\n    }\n}\n\nconst addActions = (dInstance) => {\n    dInstance.addAction(\n        'startDocument',\n        () => true,\n        (renderer, context) => {\n            renderer.config.nextKey = 0;\n        }\n    );\n    dInstance.addAction(\n        'startBlock',\n        () => true,\n        (renderer, context) => {\n            renderer.config.blockStack = [];\n        }\n    );\n    dInstance.addAction(\n        'token',\n        () => true,\n        (renderer, context, data) => {\n            renderer.config.blockStack.push(\n                data.subType === 'wordLike' ?\n                    <Link\n                        to={{\n                            pathname: \"/search\",\n                            state: {newSearchString: data.payload}\n                        }}\n                        key={renderer.config.nextKey++}\n                        className=\"browserWord\"\n                    >\n                        {data.payload}\n                    </Link> :\n                    data.payload\n            );\n        }\n    );\n    dInstance.addAction(\n        'scope',\n        () => true,\n        (renderer, context, data) => {\n            const scopeName = data.payload.split('/')[0];\n            const scopeValue = data.payload.split('/').slice(1).join('/');\n            if (data.subType === 'start' && scopeName === 'verses') {\n                renderer.config.currentVerses = scopeValue;\n                const currentChapter = renderer.config.currentChapter;\n                let verseRef = null;\n                let className = \"verses_label\";\n                if (\n                    renderer.config.currentChapter === renderer.config.selectedChapter &&\n                    renderer.config.currentVerses === renderer.config.selectedVerses\n                ) {\n                    verseRef = renderer.config.selectedVerseRef;\n                    className = \"selected_verses_label\";\n                }\n                renderer.config.blockStack.push(\n                    <span\n                        id={`v_${renderer.config.currentChapter}_${scopeValue}`}\n                        onClick={() => renderer.config.versesCallback(currentChapter, scopeValue)}\n                        ref={verseRef}\n                        key={renderer.config.nextKey++}\n                        className={className}>\n                        {scopeValue}\n                    </span>);\n            } else if (data.subType === 'end' && scopeName === 'verses') {\n                renderer.config.currentVerses = null;\n            } else if (data.subType === 'start' && scopeName === 'chapter') {\n                renderer.config.currentChapter = scopeValue;\n                renderer.config.blockStack.push(\n                    <span\n                        key={renderer.config.nextKey++}\n                        className=\"chapter_label\">\n                        {scopeValue}\n                    </span>);\n            }\n        }\n    );\n    dInstance.addAction(\n        'endBlock',\n        () => true,\n        (renderer, context) => {\n            const pRef = renderer.config.rendered.length === 0 ? renderer.config.topDocRef : null;\n            const key = renderer.config.nextKey++;\n            renderer.config.rendered.push(\n                <p key={key}\n                   id={key}\n                   ref={pRef}\n                   className={'usfm_' + context.sequenceStack[0].block.blockScope.split('/')[1]}>\n                    {renderer.config.blockStack}\n                </p>\n            );\n        }\n    );\n}\n\nexport default BrowseDocumentModel;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nexport default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n","import React from 'react';\nimport {Proskomma} from 'proskomma';\n\nconst PkContext = React.createContext(new Proskomma());\nexport const PkProvider = PkContext.Provider;\nexport default PkContext;\n","import React, {useContext, useEffect, useState} from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Tree from 'react-d3-tree';\nimport {IonButton, IonCol, IonRow, IonText, IonTitle} from '@ionic/react';\nimport './BrowseTab.css';\nimport './TreeSVG.css';\nimport useWindowDimensions from '../../components/useWindowDimensions';\nimport PkContext from \"../../contexts/PkContext\";\n\nconst xre = require('xregexp');\n\nconst renderSyntaxTree = tribos => {\n    return tribos.filter(n => n.content.elementType !== 'pc').map(\n        tree =>\n            tree.children && tree.children.length === 1 ?\n                renderSyntaxTree([tree.children[0]]) :\n                <li>\n                    {tree.content.elementType === 'w' ? `${tree.content.text} - ${tree.content.gloss} (${tree.content.class})` : tree.content.class || JSON.stringify(tree.content)}\n                    {tree.children && <ul>{renderSyntaxTree(tree.children)}</ul>}\n                </li>\n    )\n}\n\nconst syntaxTreeToD3 = tribosTree => {\n    if (tribosTree.children && tribosTree.children.length === 1) {\n        return syntaxTreeToD3(tribosTree.children[0]);\n    } else {\n        return {\n            name:\n                tribosTree.content.elementType === 'w' ?\n                    tribosTree.content.text :\n                    tribosTree.content.class || JSON.stringify(tribosTree.content),\n            attributes:\n                tribosTree.content.elementType === 'w' ?\n                    {\n                        gloss: tribosTree.content.gloss,\n                        class: tribosTree.content.class\n                    } :\n                    {},\n            children:\n                tribosTree.children ?\n                    tribosTree.children\n                        .filter(n => n.content.elementType !== 'pc')\n                        .map(ch => syntaxTreeToD3(ch)) :\n                    [],\n        }\n    }\n}\n\nconst d3TreeDepth = (d3Tree, depth) => {\n    depth = depth || 1;\n    if (!d3Tree.children || d3Tree.children.length === 0) {\n        return depth;\n    } else {\n        return Math.max(...d3Tree.children.map(ch => d3TreeDepth(ch, depth + 1)))\n    }\n}\n\nconst d3TreeLeaves = d3Tree => {\n    if (!d3Tree.children || d3Tree.children.length === 0) {\n        return 1.0;\n    } else {\n        return d3Tree.children\n            .map(ch => d3TreeLeaves(ch))\n            .reduce((a, b) => a + b);\n    }\n}\n\nconst VerseDetails = ({\n                          currentDocSet,\n                          currentBookCode,\n                          selectedChapter,\n                          selectedVerses,\n                          setShowDetails,\n                      }) => {\n    const pk = useContext(PkContext);\n    const [result, setResult] = React.useState({});\n    useEffect(() => {\n        const doQuery = async () => {\n            const res = await pk.gqlQuery(`{\n             verseText: docSet(id:\"${currentDocSet}\") {\n               document(bookCode:\"${currentBookCode}\") {cv(chapterVerses:\"${selectedChapter}:${selectedVerses}\") { text } }\n             }\n             grcVerseText: docSet(id:\"grc_ugnt\") {\n               document(bookCode:\"${currentBookCode}\") {cv(chapterVerses:\"${selectedChapter}:${selectedVerses}\") { text } }\n             }\n             translationNotes: docSet(id:\"eng_uwtn\") {\n               document(bookCode:\"${currentBookCode}\") {\n                 tableSequences { rows(equals:[{colN:1 values:[\"${selectedChapter}\"]}, {colN:2 values:[\"${selectedVerses}\"]}], columns:[5, 7, 8]) { text } }\n               }\n             }\n             studyNotes: docSet(id:\"eng_uwsn\") {\n               document(bookCode:\"${currentBookCode}\") {\n                 tableSequences { rows(equals:[{colN:0 values:[\"${selectedChapter}:${selectedVerses}\"]}], columns:[4, 6]) { text } }\n               }\n             }\n             syntaxTree: docSet(id:\"eng_cblft\") {\n               document(bookCode:\"${currentBookCode}\") {\n                 treeSequences {\n                   id\n                   verseTrees: tribos(query:\"nodes[or(not(hasContent('chapter')), not(hasContent('verse')), not(==(content('chapter'),'${selectedChapter}')), not(==(content('verse'), '${selectedVerses}')))]/children[and(==(content('chapter'), '${selectedChapter}'), ==(content('verse'), '${selectedVerses}'))]/branch{children, @text, @gloss, @elementType, @role, @class}\")\n                 }\n               }\n             }\n             }`);\n            setResult(res);\n            const refs = new Set();\n            for (const [resourceName, resourceCol] of [['translationNotes', 2], ['studyNotes', 1]]) {\n                if (res.data && res.data[resourceName] && res.data[resourceName].document && res.data[resourceName].document.tableSequences) {\n                    for (const row of res.data[resourceName].document.tableSequences[0].rows) {\n                        for (const linkPhrase of xre.match(row[resourceCol].text, /\\(See: \\[\\[(.*?)\\]\\]\\)/g)) {\n                            const link = xre.exec(linkPhrase, /\\[\\[rc:\\/\\/(.*?)\\]\\]/)[1];\n                            if (link.startsWith('en/ta')) {\n                                refs.add(link);\n                            }\n                        }\n                    }\n                }\n            }\n            // console.log(Array.from(refs));\n        };\n        doQuery();\n    }, []);\n    const windowDimensions = useWindowDimensions();\n    return <>\n        <IonRow>\n            <IonCol size={8}>\n                <IonTitle>{currentBookCode} {selectedChapter}:{selectedVerses}</IonTitle>\n            </IonCol>\n            <IonCol size={4} className=\"ion-text-end\">\n                <IonButton\n                    size=\"small\"\n                    onClick={\n                        () => {\n                            setShowDetails(false);\n                        }\n                    }\n                >\n                    Dismiss\n                </IonButton>\n            </IonCol>\n        </IonRow>\n        {\n            result.data && result.data.verseText &&\n            <IonRow>\n                <IonCol>\n                    <IonText color=\"primary\">\n                        {result.data.verseText.document.cv.map(cve => cve.text).join(' ')}\n                    </IonText>\n                </IonCol>\n            </IonRow>\n        }\n        {\n            currentDocSet !== 'grc_ugnt' && result.data && result.data.grcVerseText &&\n            <IonRow>\n                <IonCol>\n                    <IonText color=\"secondary\">\n                        {result.data.grcVerseText.document.cv.map(cve => cve.text).join(' ')}\n                    </IonText>\n                </IonCol>\n            </IonRow>\n        }\n        {\n            result.data && result.data.translationNotes && result.data.translationNotes.document && result.data.translationNotes.document.tableSequences[0].rows.length > 0 &&\n            <>\n                <IonRow>\n                    <IonCol>\n                        <IonTitle>unfoldingWord Translation Notes</IonTitle>\n                    </IonCol>\n                </IonRow>\n                {\n                    result.data.translationNotes.document.tableSequences[0].rows.map(\n                        (r, n) => <IonRow key={n} className=\"tableRow\">\n                            <IonCol size={4}>\n                                <IonRow>\n                                    <IonCol>\n                                        <IonText color=\"primary\">\n                                            {r[1].text}\n                                        </IonText>\n                                    </IonCol>\n                                </IonRow>\n                                <IonRow>\n                                    <IonCol>\n                                        <IonText color=\"secondary\">\n                                            {r[0].text}\n                                        </IonText>\n                                    </IonCol>\n                                </IonRow>\n                            </IonCol>\n                            <IonCol size={8}>\n                                <ReactMarkdown>{r[2].text.replace(/\\(See: .+\\)/g, \"\")}</ReactMarkdown>\n                            </IonCol>\n                        </IonRow>\n                    )\n                }\n            </>\n        }\n        {\n            result.data && result.data.studyNotes && result.data.studyNotes.document && result.data.studyNotes.document.tableSequences[0].rows.length > 0 &&\n            <>\n                <IonRow>\n                    <IonCol>\n                        <IonTitle>unfoldingWord Study Notes</IonTitle>\n                    </IonCol>\n                </IonRow>\n                {\n                    result.data.studyNotes.document.tableSequences[0].rows.map(\n                        (r, n) => <IonRow key={n} className=\"tableRow\">\n                            <IonCol size={4}>\n                                <IonText color=\"secondary\">\n                                    {r[0].text}\n                                </IonText>\n                            </IonCol>\n                            <IonCol size={8}>\n                                <ReactMarkdown>{r[1].text}</ReactMarkdown>\n                            </IonCol>\n                        </IonRow>\n                    )\n                }\n            </>\n        }\n        {\n            result.data && result.data.syntaxTree && result.data.syntaxTree.document && result.data.syntaxTree.document.treeSequences[0] && result.data.syntaxTree.document.treeSequences[0].verseTrees &&\n            <>\n                <IonRow>\n                    <IonCol>\n                        <IonTitle>Clear.Bible Syntax Trees</IonTitle>\n                    </IonCol>\n                </IonRow>\n                {\n                    JSON.parse(result.data.syntaxTree.document.treeSequences[0].verseTrees).data.map(\n                        tr =>\n                            <IonRow style={{height: `${d3TreeDepth(syntaxTreeToD3(tr)) * (90 * (Math.min(1, 12.0 / d3TreeLeaves(syntaxTreeToD3(tr)))))}px`}}>\n                                <IonCol>\n                                    <Tree\n                                        data={syntaxTreeToD3(tr)}\n                                        orientation=\"vertical\"\n                                        separation={{ nonSiblings: 0.5, siblings: 0.5 }}\n                                        nodeSize={{x:300, y:60}}\n                                        translate={{x: windowDimensions.width/2, y: 100}}\n                                        zoom={Math.min(1, 12.0/d3TreeLeaves(syntaxTreeToD3(tr)))}\n                                        rootNodeClassName=\"treeBranchNode\"\n                                        branchNodeClassName=\"treeBranchNode\"\n                                        leafNodeClassName=\"treeLeafNode\"\n                                    />\n                                </IonCol>\n                            </IonRow>\n                    )\n\n                }\n            </>\n        }\n    </>\n}\n\nexport default VerseDetails;\n","import React from 'react';\n\nconst SettingsContext = React.createContext({});\nexport const SettingsProvider = SettingsContext.Provider;\nexport default SettingsContext;\n","import {IonButton, IonButtons, IonIcon, IonTitle, IonToolbar} from \"@ionic/react\";\nimport {cog, globe} from \"ionicons/icons\";\nimport React, {useContext} from \"react\";\nimport SettingsContext from \"../contexts/SettingsContext\";\n\nconst PageToolBar = ({pageTitle}) => {\n    const settings = useContext(SettingsContext);\n    return <IonToolbar>\n        <IonButtons slot=\"end\">\n            <IonButton\n                onClick={() => settings.enableNetworkAccess[1](!settings.enableNetworkAccess[0])}\n            >\n                <IonIcon\n                    color={settings.enableNetworkAccess[0] ? \"dark\" : \"medium\"}\n                    slot=\"icon-only\"\n                    icon={globe}/>\n            </IonButton>\n            <IonButton routerLink=\"/settings\">\n                <IonIcon slot=\"icon-only\" icon={cog}/>\n            </IonButton>\n        </IonButtons>\n        <IonTitle>{pageTitle} - Diegesis</IonTitle>\n    </IonToolbar>;\n}\n\nexport default PageToolBar;\n","import React from 'react';\n\nconst DocSetsContext = React.createContext({});\nexport const DocSetsProvider = DocSetsContext.Provider;\nexport default DocSetsContext;\n","import React, {useContext, useEffect, useRef, useState} from 'react';\nimport {\n    IonCol,\n    IonContent,\n    IonGrid,\n    IonHeader,\n    IonItem,\n    IonPage,\n    IonRow,\n    IonSelect,\n    IonSelectOption,\n    IonText\n} from '@ionic/react';\nimport {ScriptureDocSet, ScriptureParaModel, ScriptureParaModelQuery,} from 'proskomma-render';\nimport BrowseDocumentModel from './BrowseDocumentModel';\nimport VerseDetails from \"./VerseDetails\";\nimport './BrowseTab.css';\nimport PageToolBar from '../../components/PageToolBar';\n\nimport PkContext from '../../contexts/PkContext';\nimport DocSetsContext from '../../contexts/DocSetsContext';\n\n\nconst BrowseTab = (\n    {\n        currentDocSet,\n        setCurrentDocSet,\n        currentBookCode,\n        setCurrentBookCode,\n        selectedChapter,\n        selectedVerses,\n        setSelectedChapter,\n        setSelectedVerses,\n        currentDocId\n    }\n) => {\n    const pk = useContext(PkContext);\n    const docSets = useContext(DocSetsContext);\n    const [renderedSequence, setRenderedSequence] = useState([]);\n    const [showDetails, setShowDetails] = useState(false);\n    const selectedVerseRef = useRef(null);\n    const topDocRef = useRef(null);\n    const scrollToSelectedVerse = () => {\n        if (selectedVerseRef.current) {\n            selectedVerseRef.current.scrollIntoView({block: \"center\"});\n        }\n        return true;\n    }\n    const scrollToTopDoc = () => {\n        if (topDocRef.current) {\n            topDocRef.current.scrollIntoView({block: \"start\"});\n        }\n        return true;\n    }\n\n    useEffect(() => {\n        const doQuery = async () => {\n            const resData = await ScriptureParaModelQuery(pk, [currentDocSet], [currentDocId]);\n            if (resData.docSets && resData.docSets[0]) {\n                const config = {\n                    rendered: [],\n                    versesCallback: ((chapter, verses) => {\n                        setSelectedChapter(chapter);\n                        setSelectedVerses(verses);\n                        setShowDetails(true);\n                    }),\n                    selectedChapter,\n                    selectedVerses,\n                    selectedVerseRef,\n                    topDocRef,\n                };\n                const model = new ScriptureParaModel(resData, config);\n                const docSetModel = new ScriptureDocSet(resData, model.context, config);\n                docSetModel.addDocumentModel(\"default\", new BrowseDocumentModel(resData, model.context, config));\n                model.addDocSetModel('default', docSetModel);\n                model.render();\n                setRenderedSequence(config.rendered);\n            }\n        };\n        if (currentDocSet && currentBookCode) {\n            doQuery();\n        }\n    }, [currentBookCode, currentDocSet, selectedChapter, selectedVerses, pk]);\n    useEffect(() => {\n        if (selectedVerses && selectedVerseRef) {\n            scrollToSelectedVerse();\n        } else if (topDocRef) {\n            scrollToTopDoc();\n        }\n    }, [selectedVerses, selectedVerseRef, topDocRef, showDetails, renderedSequence]);\n    return (\n        <IonPage>\n            <IonHeader>\n                <PageToolBar pageTitle=\"Browse\"/>\n                {\n                    currentDocSet !== \"\" &&\n                    <IonGrid>\n                        <IonRow>\n                            <IonCol size={6}>\n                                <IonSelect\n                                    value={currentDocSet}\n                                    disabled={showDetails}\n                                    onIonChange={e => {\n                                        setCurrentDocSet(e.detail.value);\n                                        const docSet = docSets[e.detail.value];\n                                        if (docSet) {\n                                            const firstBookCode = Object.keys(docSet.documents)[0];\n                                            setCurrentBookCode(currentBookCode in docSet.documents ? currentBookCode : firstBookCode);\n                                            setSelectedChapter(null);\n                                            setSelectedVerses(null);\n                                        }\n                                    }}>\n                                    {\n                                        [...Object.entries(docSets)]\n                                            .map(dse =>\n                                                <IonSelectOption key={dse[0]} value={dse[0]}>\n                                                    {`${dse[0]}`}\n                                                </IonSelectOption>\n                                            )\n                                    }\n                                </IonSelect>\n                            </IonCol>\n                            <IonCol size={6}>\n                                <IonSelect\n                                    value={currentBookCode}\n                                    disabled={showDetails}\n                                    onIonChange={e => setCurrentBookCode(e.detail.value)}>\n                                    {\n                                        [...Object.entries(docSets[currentDocSet].documents)]\n                                            .map(de =>\n                                                <IonSelectOption key={de[0]} value={de[0]}>\n                                                    {`${de[0]}`}\n                                                </IonSelectOption>\n                                            )\n                                    }\n                                </IonSelect>\n                            </IonCol>\n                        </IonRow>\n                    </IonGrid>\n                }\n            </IonHeader>\n            <IonContent>\n                {!currentDocSet &&\n                <IonItem><IonText color=\"primary\">No content - download some in settings</IonText></IonItem>}\n                {currentDocSet &&\n                <IonGrid>\n                    {\n                        !showDetails &&\n                        <IonRow>\n                            <IonCol>\n                                <IonText>{renderedSequence}</IonText>\n                            </IonCol>\n                        </IonRow>\n                    }\n                    {\n                        showDetails &&\n                        <VerseDetails\n                            currentDocSet={currentDocSet}\n                            currentBookCode={currentBookCode}\n                            selectedChapter={selectedChapter}\n                            selectedVerses={selectedVerses}\n                            setShowDetails={setShowDetails}\n                        />\n                    }\n                </IonGrid>}\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default BrowseTab;\n","import {IonButton, IonIcon, IonTitle} from \"@ionic/react\";\nimport {arrowBack, arrowForward} from \"ionicons/icons\";\nimport React from \"react\";\n\nconst SearchResultTools = (\n    {\n        resultsPage,\n        setResultsPage,\n        nResultsPerPage,\n        resultParaRecords,\n        booksToSearch\n    }\n) => <IonTitle>\n    <IonButton\n        fill=\"clear\"\n        color=\"secondary\"\n        disabled={resultsPage === 0}\n        onClick={() => setResultsPage(resultsPage - 1)}\n    >{\n        <IonIcon icon={arrowBack}/>\n    }</IonButton>\n    {`\n        ${(resultsPage * nResultsPerPage) + 1}-${Math.min((resultsPage * nResultsPerPage) + nResultsPerPage, resultParaRecords.length)}\n                                    of\n                                    ${booksToSearch.length > 0 ? 'at least' : \"\"}\n                                    ${resultParaRecords.length} result${resultParaRecords.length !== 1 ? 's' : ''}\n                                    ${booksToSearch.length > 0 ? ` (${booksToSearch.length} unsearched book${booksToSearch.length === 1 ? '': 's'})` : ''}\n                                    `}\n    <IonButton\n        fill=\"clear\"\n        color=\"secondary\"\n        disabled={(resultsPage * nResultsPerPage) + nResultsPerPage > resultParaRecords.length}\n        onClick={() => setResultsPage(resultsPage + 1)}\n    >{\n        <IonIcon icon={arrowForward}/>\n    }</IonButton>\n</IonTitle>\n\nexport default SearchResultTools;\n","import React, {useContext, useEffect} from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport {\n    IonButton,\n    IonCol,\n    IonContent,\n    IonGrid,\n    IonHeader,\n    IonIcon,\n    IonInput,\n    IonPage,\n    IonRow,\n    IonText\n} from '@ionic/react';\nimport './SearchTab.css';\n\nimport PkContext from '../../contexts/PkContext';\nimport PageToolBar from \"../../components/PageToolBar\";\nimport SearchResultsTools from './SearchResultsTools';\nimport {options, search, trash} from \"ionicons/icons\";\n\nconst SearchTab = ({currentDocSet, setCurrentBookCode, setSelectedChapter, setSelectedVerses}) => {\n    const pk = useContext(PkContext);\n    const [linkSearchString, setLinkSearchString] = React.useState(\"\");\n    const [searchString, setSearchString] = React.useState(\"\");\n    const [searchWaiting, setSearchWaiting] = React.useState(false);\n    const [searchTerms, setSearchTerms] = React.useState([]);\n    const [booksToSearch, setBooksToSearch] = React.useState([]);\n    const [resultParaRecords, setResultParaRecords] = React.useState([]);\n    const [nResultsPerPage, setNResultsPerPage] = React.useState(5);\n    const [resultsPage, setResultsPage] = React.useState(0);\n    const jumpToVerse = (book, chapter, verses) => {\n        setCurrentBookCode(book);\n        setSelectedChapter(chapter);\n        setSelectedVerses(verses);\n    }\n    const location = useLocation();\n    if (location && location.state && location.state.newSearchString && location.state.newSearchString !== linkSearchString) {\n        setLinkSearchString(location.state.newSearchString);\n    }\n    useEffect(\n        // When linkSearchString changes, refresh searchString and launch new search\n        () => {\n            setSearchString(linkSearchString);\n            setSearchWaiting(true);\n        }, [linkSearchString]);\n\n    useEffect(\n        // When searchWaiting is set, refresh searchTerms and set booksToSearch\n        () => {\n            if (searchWaiting) {\n                const terms = searchString.split(/ +/)\n                    .map((st) => st.trim())\n                    .filter((st) => st.length > 0);\n                setSearchTerms(terms);\n                if (terms.length > 0) {\n                    const searchDocumentMatchQuery = (\n                        \"{\" +\n                        '  docSet(id:\"%docSetId%\") {\\n' +\n                        \"    documents(\" +\n                        \"         sortedBy:\\\"paratext\\\"\" +\n                        \"         allChars: true \" +\n                        \"         withMatchingChars: [%searchTerms%]\\n\" +\n                        \"         ) {\\n\" +\n                        '           bookCode: header(id:\"bookCode\") ' +\n                        \"         }\\n\" +\n                        \"       }\\n\" +\n                        \"}\"\n                    ).replace('%docSetId%', currentDocSet)\n                        .replace(\n                            '%searchTerms%',\n                            terms\n                                .map(st => `\"\"\"${st}\"\"\"`)\n                                .join(\", \")\n                        )\n                    const doQuery = async () => {\n                        const result = await pk.gqlQuery(searchDocumentMatchQuery);\n                        setSearchWaiting(false);\n                        setBooksToSearch([]);\n                        setResultParaRecords([]);\n                        setResultsPage(0);\n                        if (result.data && result.data.docSet) {\n                            setBooksToSearch(\n                                result.data.docSet.documents.map((book) => book.bookCode)\n                            );\n                        }\n                        return result;\n                    };\n                    doQuery().then();\n                }\n            }\n        },\n        [searchWaiting, currentDocSet, pk, searchString]\n    );\n    useEffect(\n        // When booksToSearch is set and is not empty,\n        // and more results are needed according to paging,\n        // search next book\n        () => {\n            if (booksToSearch.length > 0 && resultParaRecords.length < ((resultsPage + 1) * nResultsPerPage)) {\n                const bookToSearch = booksToSearch[0];\n                const searchBlockMatchQuery = (\n                    \"{\" +\n                    '  docSet(id:\"%docSetId%\") {\\n' +\n                    \"    document(\" +\n                    '        bookCode:\"%bookCode%\" \\n' +\n                    \"      ) {\\n\" +\n                    \"       id\\n\" +\n                    '       bookCode: header(id: \"bookCode\")\\n' +\n                    '       title: header(id: \"toc2\")\\n' +\n                    \"       mainSequence {\\n\" +\n                    \"         blocks(\\n\" +\n                    \"            allChars : true \" +\n                    \"           withMatchingChars: [%searchTerms%]\\n\" +\n                    \"         ) {\\n\" +\n                    \"           scopeLabels(startsWith:[\\\"chapter/\\\", \\\"verse/\\\"])\\n\" +\n                    \"           itemGroups(byScopes:[\\\"chapter/\\\", \\\"verses/\\\"]) { scopeLabels(startsWith:[\\\"verses/\\\"]) text tokens { subType payload }}\\n\" +\n                    \"         }\\n\" +\n                    \"       }\\n\" +\n                    \"    }\\n\" +\n                    '    matches: enumRegexIndexesForString (enumType:\"wordLike\" searchRegex:\"%searchTermsRegex%\") { matched }\\n' +\n                    \"  }\\n\" +\n                    \"}\"\n                ).replace('%docSetId%', currentDocSet)\n                    .replace('%bookCode%', bookToSearch)\n                    .replace(\n                        '%searchTerms%',\n                        searchTerms\n                            .map(st => `\"\"\"${st}\"\"\"`)\n                            .join(\", \")\n                    )\n                    .replace(\n                        '%searchTermsRegex%',\n                        searchTerms\n                            .map(st => `^${st}$`)\n                            .join('|')\n                    );\n                const doQuery = async () => {\n                    const result = await pk.gqlQuery(searchBlockMatchQuery);\n                    let records = [];\n                    if (result.data && result.data.docSet && result.data.docSet.document) {\n                        records = result.data.docSet.document.mainSequence.blocks.map(\n                            b => ({\n                                book: result.data.docSet.document.bookCode,\n                                matches: result.data.docSet.matches.map(m => m.matched),\n                                chapter: b.scopeLabels.filter(sl => sl.startsWith('chapter'))[0].split('/')[1],\n                                verses: b.scopeLabels\n                                    .filter(sl => sl.startsWith('verse'))\n                                    .map(sl => sl.split('/')[1])\n                                    .map(vns => parseInt(vns)),\n                                items: b.items,\n                                itemGroups: b.itemGroups,\n                            })\n                        );\n                        const allParaRecords = [...resultParaRecords, ...records];\n                        setResultParaRecords(allParaRecords);\n                    }\n                    setBooksToSearch(booksToSearch.slice(1));\n                    return records;\n                };\n                doQuery().then();\n            }\n        },\n        [booksToSearch, resultsPage, currentDocSet, nResultsPerPage, pk, resultParaRecords, searchTerms]\n    );\n    return (\n        <IonPage>\n            <IonHeader>\n                <PageToolBar pageTitle=\"Search\"/>\n            </IonHeader>\n            <IonContent>\n                <IonGrid>\n                    <IonRow>\n                        <IonCol size={1}>\n                            <IonButton color=\"secondary\" fill=\"clear\">\n                                <IonIcon float-right icon={options}/>\n                            </IonButton>\n                        </IonCol>\n                        <IonCol size={9}>\n                            <IonInput\n                                value={searchString}\n                                placeholder=\"Search Items\"\n                                onKeyPress={e => e.key === 'Enter' && setSearchWaiting(true)}\n                                onIonChange={e => setSearchString(e.detail.value)}\n                            />\n                        </IonCol>\n                        <IonCol size={1}>\n                            <IonButton\n                                color=\"primary\"\n                                fill=\"clear\"\n                                onClick={() => setSearchWaiting(true)}\n                            >\n                                <IonIcon float-right icon={search}/>\n                            </IonButton>\n                        </IonCol>\n                        <IonCol size={1}>\n                            <IonButton\n                                className=\"ion-float-end\"\n                                color=\"secondary\"\n                                fill=\"clear\"\n                                onClick={() => setSearchString('')}\n                            >\n                                <IonIcon float-right icon={trash}/>\n                            </IonButton>\n                        </IonCol>\n                    </IonRow>\n                    {\n                        resultParaRecords.length > 0 &&\n                        <IonRow>\n                            <IonCol style={{textAlign: \"center\"}}>\n                                <SearchResultsTools\n                                    resultsPage={resultsPage}\n                                    setResultsPage={setResultsPage}\n                                    nResultsPerPage={nResultsPerPage}\n                                    resultParaRecords={resultParaRecords}\n                                    booksToSearch={booksToSearch}\n                                />\n                            </IonCol>\n                        </IonRow>\n                    }\n                    <IonRow>\n                        <IonCol>\n                            {\n                                resultParaRecords.length === 0 ?\n                                    <IonText>No results</IonText> :\n                                    resultParaRecords\n                                        .slice(resultsPage * nResultsPerPage, (resultsPage * nResultsPerPage) + nResultsPerPage)\n                                        .map(\n                                            (rr, n) => {\n                                                const fromVerse = Math.min(...rr.verses);\n                                                const toVerse = Math.max(...rr.verses);\n                                                return <IonRow key={n}>\n                                                    <IonCol size={1} style={{fontSize: \"smaller\", fontWeight: \"bold\"}}>\n                                                        {`${rr.book} ${rr.chapter}:${fromVerse}`}\n                                                        {toVerse > fromVerse && `-${toVerse}`}\n                                                    </IonCol>\n                                                    <IonCol size={11}>\n                                                        {\n                                                            rr.itemGroups\n                                                                .map(\n                                                                    (ig, n) =>\n                                                                        <span key={n}>\n                                                                            <Link\n                                                                                to=\"/browse\"\n                                                                                onClick={() => jumpToVerse(rr.book, rr.chapter, ig.scopeLabels[0].split('/')[1])}\n                                                                                className=\"verseNumber\">{ig.scopeLabels[0].split('/')[1]}</Link>\n                                                                            {\n                                                                                ig.tokens.map(\n                                                                                    (t, n) =>\n                                                                                        t.subType === 'wordLike' ?\n                                                                                            <span\n                                                                                                key={n}\n                                                                                                onClick={\n                                                                                                    () => {\n                                                                                                        setSearchString(searchString + \" \" + t.payload);\n                                                                                                        setSearchWaiting(true);\n                                                                                                    }\n                                                                                                }\n                                                                                            >\n                                                                                                {\n                                                                                                    t.subType === 'wordLike' ?\n                                                                                                        rr.matches.includes(t.payload) ?\n                                                                                                            <IonText\n                                                                                                                color=\"primary\"\n                                                                                                                key={n}>\n                                                                                                                {t.payload}\n                                                                                                            </IonText> :\n                                                                                                            t.payload\n                                                                                                        :\n                                                                                                        t.payload\n                                                                                                }\n                                                                                            </span>\n                                                                                            :\n                                                                                            t.payload\n                                                                                )\n                                                                            }\n                                                                        </span>\n                                                                )\n                                                        }\n                                                    </IonCol>\n                                                </IonRow>;\n                                            }\n                                        )\n                            }\n                        </IonCol>\n                    </IonRow>\n                    {\n                        resultParaRecords.length > 0 &&\n                        <IonRow>\n                            <IonCol style={{textAlign: \"center\"}}>\n                                <SearchResultsTools\n                                    resultsPage={resultsPage}\n                                    setResultsPage={setResultsPage}\n                                    nResultsPerPage={nResultsPerPage}\n                                    resultParaRecords={resultParaRecords}\n                                    booksToSearch={booksToSearch}\n                                />\n                            </IonCol>\n                        </IonRow>\n                    }\n                </IonGrid>\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default SearchTab;\n","import './ExploreContainer.css';\n\ninterface ContainerProps {\n  name: string;\n}\n\nconst ExploreContainer: React.FC<ContainerProps> = ({ name }) => {\n  return (\n    <div className=\"container\">\n      <strong>{name}</strong>\n      <p>Explore <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ionicframework.com/docs/components\">UI Components</a></p>\n    </div>\n  );\n};\n\nexport default ExploreContainer;\n","import React, {useContext, useEffect} from 'react';\nimport {IonContent, IonHeader, IonPage, IonTitle, IonToolbar} from '@ionic/react';\nimport ExploreContainer from '../../components/ExploreContainer';\nimport './EditTab.css';\n\nimport PkContext from '../../contexts/PkContext';\nimport PageToolBar from \"../../components/PageToolBar\";\n\nconst EditTab = () => {\n    const pk = useContext(PkContext);\n    const [result, setResult] = React.useState({});\n    useEffect(() => {\n        const doQuery = async () => {\n                 const res = await pk.gqlQuery('{ id packageVersion processor }');\n                setResult(res);\n        };\n        doQuery();\n    }, []);\n\n    return (\n        <IonPage>\n            <IonHeader>\n                <PageToolBar pageTitle=\"Edit\"/>\n            </IonHeader>\n            <IonContent fullscreen>\n                <h1>{JSON.stringify(result)}</h1>\n                <ExploreContainer name=\"Edit Content\"/>\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default EditTab;\n","import React, {useContext, useEffect} from 'react';\nimport {IonContent, IonHeader, IonPage, IonTitle, IonToolbar} from '@ionic/react';\nimport ExploreContainer from '../../components/ExploreContainer';\nimport './PublishTab.css';\n\nimport PkContext from '../../contexts/PkContext';\nimport PageToolBar from \"../../components/PageToolBar\";\n\nconst PublishTab = () => {\n    const pk = useContext(PkContext);\n    const [result, setResult] = React.useState({});\n    useEffect(() => {\n        const doQuery = async () => {\n                 const res = await pk.gqlQuery('{ id packageVersion processor }');\n                setResult(res);\n        };\n        doQuery();\n    }, []);\n\n    return (\n        <IonPage>\n            <IonHeader>\n                <PageToolBar pageTitle=\"Publish\"/>\n            </IonHeader>\n            <IonContent fullscreen>\n                <h1>{JSON.stringify(result)}</h1>\n                <ExploreContainer name=\"Publish Content\"/>\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default PublishTab;\n","const onlineSources = JSON.parse(\"[{\\\"selectors\\\":{\\\"source\\\":\\\"ebible\\\",\\\"lang\\\":\\\"eng\\\",\\\"abbr\\\":\\\"asv\\\",\\\"isDraft\\\":0},\\\"description\\\":\\\"American Standard Version\\\",\\\"transport\\\":\\\"https\\\",\\\"sourcePrefix\\\":\\\"https://ebible.org/Scriptures/\\\",\\\"documents\\\":[{\\\"bookCodes\\\":[\\\"MAT\\\",\\\"MRK\\\",\\\"LUK\\\",\\\"JHN\\\",\\\"ACT\\\",\\\"ROM\\\",\\\"1CO\\\",\\\"2CO\\\",\\\"GAL\\\",\\\"EPH\\\",\\\"PHP\\\",\\\"COL\\\",\\\"1TH\\\",\\\"2TH\\\",\\\"ITI\\\",\\\"2TI\\\",\\\"TIT\\\",\\\"PHM\\\",\\\"HEB\\\",\\\"JAS\\\",\\\"1PE\\\",\\\"2PE\\\",\\\"1JN\\\",\\\"2JN\\\",\\\"3JN\\\",\\\"JUD\\\",\\\"REV\\\"],\\\"docTypes\\\":[\\\"text\\\"],\\\"format\\\":\\\"usfmZip\\\",\\\"source\\\":\\\"eng-asv_usfm.zip\\\"}]},{\\\"selectors\\\":{\\\"source\\\":\\\"ebible\\\",\\\"lang\\\":\\\"eng\\\",\\\"abbr\\\":\\\"emtv\\\",\\\"isDraft\\\":0},\\\"description\\\":\\\"The New Testament, English Majority Text Version\\\",\\\"transport\\\":\\\"https\\\",\\\"sourcePrefix\\\":\\\"https://ebible.org/Scriptures/\\\",\\\"documents\\\":[{\\\"bookCodes\\\":[\\\"MAT\\\",\\\"MRK\\\",\\\"LUK\\\",\\\"JHN\\\",\\\"ACT\\\",\\\"ROM\\\",\\\"1CO\\\",\\\"2CO\\\",\\\"GAL\\\",\\\"EPH\\\",\\\"PHP\\\",\\\"COL\\\",\\\"1TH\\\",\\\"2TH\\\",\\\"ITI\\\",\\\"2TI\\\",\\\"TIT\\\",\\\"PHM\\\",\\\"HEB\\\",\\\"JAS\\\",\\\"1PE\\\",\\\"2PE\\\",\\\"1JN\\\",\\\"2JN\\\",\\\"3JN\\\",\\\"JUD\\\",\\\"REV\\\"],\\\"docTypes\\\":[\\\"text\\\"],\\\"format\\\":\\\"usfmZip\\\",\\\"source\\\":\\\"engemtv_usfm.zip\\\"}]},{\\\"selectors\\\":{\\\"source\\\":\\\"ebible\\\",\\\"lang\\\":\\\"eng\\\",\\\"abbr\\\":\\\"webbe\\\",\\\"isDraft\\\":0},\\\"description\\\":\\\"World English Bible British Edition\\\",\\\"transport\\\":\\\"https\\\",\\\"sourcePrefix\\\":\\\"https://ebible.org/Scriptures/\\\",\\\"documents\\\":[{\\\"bookCodes\\\":[\\\"MAT\\\",\\\"MRK\\\",\\\"LUK\\\",\\\"JHN\\\",\\\"ACT\\\",\\\"ROM\\\",\\\"1CO\\\",\\\"2CO\\\",\\\"GAL\\\",\\\"EPH\\\",\\\"PHP\\\",\\\"COL\\\",\\\"1TH\\\",\\\"2TH\\\",\\\"ITI\\\",\\\"2TI\\\",\\\"TIT\\\",\\\"PHM\\\",\\\"HEB\\\",\\\"JAS\\\",\\\"1PE\\\",\\\"2PE\\\",\\\"1JN\\\",\\\"2JN\\\",\\\"3JN\\\",\\\"JUD\\\",\\\"REV\\\"],\\\"docTypes\\\":[\\\"text\\\"],\\\"format\\\":\\\"usfmZip\\\",\\\"source\\\":\\\"eng-webbe_usfm.zip\\\"}]},{\\\"selectors\\\":{\\\"source\\\":\\\"door43\\\",\\\"lang\\\":\\\"grc\\\",\\\"abbr\\\":\\\"ugnt\\\",\\\"isDraft\\\":0},\\\"description\\\":\\\"Unfolding Word Greek New Testament\\\",\\\"transport\\\":\\\"https\\\",\\\"sourcePrefix\\\":\\\"https://git.door43.org/unfoldingWord/\\\",\\\"documents\\\":[{\\\"bookCodes\\\":[\\\"MAT\\\",\\\"MRK\\\",\\\"LUK\\\",\\\"JHN\\\",\\\"ACT\\\",\\\"ROM\\\",\\\"1CO\\\",\\\"2CO\\\",\\\"GAL\\\",\\\"EPH\\\",\\\"PHP\\\",\\\"COL\\\",\\\"1TH\\\",\\\"2TH\\\",\\\"ITI\\\",\\\"2TI\\\",\\\"TIT\\\",\\\"PHM\\\",\\\"HEB\\\",\\\"JAS\\\",\\\"1PE\\\",\\\"2PE\\\",\\\"1JN\\\",\\\"2JN\\\",\\\"3JN\\\",\\\"JUD\\\",\\\"REV\\\"],\\\"docTypes\\\":[\\\"text\\\"],\\\"format\\\":\\\"usfmZip\\\",\\\"source\\\":\\\"el-x-koine_ugnt/archive/v0.22.zip\\\"}]},{\\\"selectors\\\":{\\\"source\\\":\\\"door43\\\",\\\"lang\\\":\\\"eng\\\",\\\"abbr\\\":\\\"uwtn\\\",\\\"isDraft\\\":0},\\\"description\\\":\\\"Unfolding Word Translation Notes\\\",\\\"transport\\\":\\\"https\\\",\\\"sourcePrefix\\\":\\\"https://git.door43.org/unfoldingWord/\\\",\\\"documents\\\":[{\\\"bookCodes\\\":[\\\"LUK\\\",\\\"TIT\\\"],\\\"docTypes\\\":[\\\"table\\\"],\\\"format\\\":\\\"tsvZip\\\",\\\"source\\\":\\\"en_tn/archive/v54.zip\\\"}]},{\\\"selectors\\\":{\\\"source\\\":\\\"door43\\\",\\\"lang\\\":\\\"eng\\\",\\\"abbr\\\":\\\"uwsn\\\",\\\"isDraft\\\":0},\\\"description\\\":\\\"Unfolding Word Study Notes\\\",\\\"transport\\\":\\\"https\\\",\\\"sourcePrefix\\\":\\\"https://git.door43.org/unfoldingWord/\\\",\\\"documents\\\":[{\\\"bookCodes\\\":[\\\"TIT\\\"],\\\"docTypes\\\":[\\\"table\\\"],\\\"format\\\":\\\"tsvZip\\\",\\\"source\\\":\\\"en_sn/archive/master.zip\\\"}]},{\\\"selectors\\\":{\\\"source\\\":\\\"diegesis\\\",\\\"lang\\\":\\\"eng\\\",\\\"abbr\\\":\\\"cblft\\\",\\\"isDraft\\\":0},\\\"description\\\":\\\"Clear.Bible 'Low Fat' Syntax Trees\\\",\\\"transport\\\":\\\"https\\\",\\\"sourcePrefix\\\":\\\"https://diegesis/\\\",\\\"documents\\\":[{\\\"bookCodes\\\":[\\\"TIT\\\"],\\\"docTypes\\\":[\\\"tree\\\"],\\\"format\\\":\\\"pkSerialized\\\",\\\"source\\\":\\\"eng_cblft_serialized.json\\\"}]},{\\\"selectors\\\":{\\\"source\\\":\\\"diegesis\\\",\\\"lang\\\":\\\"eng\\\",\\\"abbr\\\":\\\"uwta\\\",\\\"isDraft\\\":0},\\\"description\\\":\\\"Unfolding Word Translation Academy\\\",\\\"transport\\\":\\\"https\\\",\\\"sourcePrefix\\\":\\\"https://diegesis/\\\",\\\"documents\\\":[{\\\"bookCodes\\\":[],\\\"docTypes\\\":[\\\"entries\\\"],\\\"format\\\":\\\"pkSerialized\\\",\\\"source\\\":\\\"eng_uwta_serialized.json\\\"}]}]\");\n\nexport default onlineSources;\n\n","import React, {useContext, useEffect, useState} from 'react';\nimport {IonButton, IonCol, IonGrid, IonIcon, IonRow, IonSpinner, IonText} from '@ionic/react';\nimport onlineSources from '../../resources/sourceIndexes/online_sources';\nimport {download} from \"ionicons/icons\";\nimport Axios from 'axios';\nimport JSZip from 'jszip';\nimport PkContext from \"../../contexts/PkContext\";\nimport SettingsContext from \"../../contexts/SettingsContext\";\nimport \"./SettingsTab.css\";\n\nconst uuid = require('uuid');\nconst btoa = require('btoa');\n\nexport const AddRemote = ({toImport, setToImport, loadUuid, setLoadUuid, loadedDocSets}) => {\n    const [toDownload, setToDownload] = useState([]);\n\n    const pk = useContext(PkContext);\n    const settings = useContext(SettingsContext);\n\n    useEffect(() => {\n        const doDownload = async () => {\n            const downloadRecord = toDownload[0];\n            const newToImport = [...toImport];\n            const axiosInstance = Axios.create({});\n            axiosInstance.defaults.headers = {\n                'Cache-Control': 'no-cache',\n                'Pragma': 'no-cache',\n                'Expires': '0',\n            };\n            await axiosInstance.request(\n                {\n                    method: \"get\",\n                    responseType: 'arraybuffer',\n                    \"url\": `http://localhost:8099/${downloadRecord.source}`,\n                    \"validateStatus\": false,\n                }\n            )\n                .then(\n                    async response => {\n                        const data = response.data;\n                        if (response.status !== 200) {\n                            console.log(`Request ${downloadRecord.source} returned status code ${response.status}`);\n                            console.log(String.fromCharCode.apply(null, new Uint8Array(data)));\n                            return;\n                        }\n                        if (['usfmZip', 'tsvZip'].includes(downloadRecord.format)) {\n                            const zip = new JSZip();\n                            await zip.loadAsync(data);\n                            await Promise.all(downloadRecord.bookCodes.map(async bc => {\n                                const matchingFiles = Object.keys(zip.files).filter(zf => zf.includes(bc));\n                                if (matchingFiles.length > 1) {\n                                    console.log(`Multiple matches for bookCode '${bc}' in doDownload`);\n                                    return;\n                                }\n                                if (matchingFiles.length === 1) {\n                                    const response = await zip.file(matchingFiles[0]).async('string');\n                                    newToImport.push({\n                                        selectors: downloadRecord.selectors,\n                                        bookCode: bc,\n                                        contentType: downloadRecord.format === 'usfmZip' ? 'usfm' : 'tsv',\n                                        content: response\n                                    });\n                                }\n                            }));\n                            setToImport(newToImport);\n                            const newUuid = btoa(uuid.v4()).substring(0, 12);\n                            setLoadUuid(newUuid);\n                        } else if (downloadRecord.format === 'pkSerialized') {\n                            const succinctJson = JSON.parse(new TextDecoder().decode(data));\n                            newToImport.push({\n                                selectors: downloadRecord.selectors,\n                                bookCode: '',\n                                contentType: \"pkSerialized\",\n                                content: succinctJson,\n                            });\n                            setToImport(newToImport);\n                        } else {\n                            console.log(`Unknown format ${downloadRecord.format}`);\n                        }\n                    });\n            setToDownload(toDownload.slice(1));\n        };\n        if (toDownload.length > 0) {\n            doDownload().then();\n        }\n    }, [toDownload]);\n\n    const doDownload = os => {\n        os.documents.forEach(doc => setToDownload([\n            ...toDownload,\n            {\n                ...doc,\n                selectors: os.selectors,\n                source: `${os.sourcePrefix}${doc.source}`\n            }\n        ]));\n    }\n    const sourceEntries = [...onlineSources.entries()]\n        .filter(([n, os]) => loadedDocSets.filter(lds => lds[0] === os.selectors.lang && lds[1] === os.selectors.abbr).length === 0);\n    if (settings.enableNetworkAccess[0]) {\n        return (\n            <IonGrid class=\"storage_content\">\n                {\n                    sourceEntries.length > 0 ?\n                        sourceEntries.map(([n, os]) =>\n                            <IonRow key={n}>\n                                <IonCol size=\"1\">{os.selectors.source}</IonCol>\n                                <IonCol size=\"1\">{os.selectors.lang}</IonCol>\n                                <IonCol\n                                    size=\"2\">{Array.from(new Set(os.documents.map(d => d.docTypes).reduce((a, b) => a.concat(b)))).join(', ')}\n                                </IonCol>\n                                <IonCol size=\"7\">{os.description}</IonCol>\n                                <IonCol size=\"1\">\n                                    {(toImport.length === 0 && toDownload.length === 0) &&\n                                    <IonButton\n                                        fill=\"clear\"\n                                        onClick={() => doDownload(os)}>\n                                        <IonIcon icon={download}/>\n                                    </IonButton>}\n                                    {(toImport.length > 0 || toDownload.length > 0) && <IonSpinner name={\"dots\"}/>}\n                                </IonCol>\n                            </IonRow>\n                        ) : <p className=\"no_content\">\n                            <IonText color=\"primary\">No Content to Download</IonText>\n                            {(toImport.length > 0 || toDownload.length > 0) && <IonSpinner name={\"dots\"}/>}\n                        </p>\n                }\n            </IonGrid>\n        );\n    } else {\n        return <IonGrid class=\"storage_content\">\n            <IonRow>\n                <IonCol>\n                    <p className=\"no_content\">\n                        <IonText color=\"danger\">Network Access Disabled in App - Click Globe to Enable</IonText>\n                    </p>\n                </IonCol>\n            </IonRow>\n        </IonGrid>\n    }\n};\n\nexport default AddRemote;\n","import React, {useContext, useState} from 'react';\nimport {IonButton, IonCol, IonGrid, IonIcon, IonRow, IonText} from '@ionic/react';\nimport onlineSources from '../../resources/sourceIndexes/online_sources';\nimport {trash} from \"ionicons/icons\";\nimport PkContext from \"../../contexts/PkContext\";\nimport \"./SettingsTab.css\";\nimport btoa from \"btoa\";\nconst uuid = require(\"uuid\");\n\nexport const RemoveLocal = ({setLoadUuid, loadedDocSets, currentDocSet, setCurrentDocSet, setCurrentBookCode}) => {\n\n    const pk = useContext(PkContext);\n\n    const removeDocSet = async selectors => {\n        const docSetId = `${selectors.lang}_${selectors.abbr}`;\n        const query = `mutation { deleteDocSet(docSetId: \"${docSetId}\") }`;\n        const result = await pk.gqlQuery(query);\n        if (currentDocSet === docSetId) {\n            setCurrentDocSet(\"\");\n            setCurrentBookCode(\"\");\n        }\n        setLoadUuid(btoa(uuid.v4()).substring(0, 12));\n    }\n\n    const [buttonsDisabled, setButtonsDisabled] = useState(false);\n    const sourceEntries = [...onlineSources.entries()]\n        .filter(([n, os]) => loadedDocSets.filter(lds => lds[0] === os.selectors.lang && lds[1] === os.selectors.abbr).length === 1);\n    return (\n        <IonGrid class=\"storage_content\">\n            {\n                sourceEntries.length > 0 ?\n                sourceEntries.map(([n, os]) => {\n                        return <IonRow key={n}>\n                            <IonCol size=\"8\">{os.description}</IonCol>\n                            <IonCol size=\"3\">{os.selectors.source}</IonCol>\n                            <IonCol size=\"1\">\n                                <IonButton\n                                    fill=\"clear\"\n                                    disabled={buttonsDisabled}\n                                    onClick={() => {\n                                        setButtonsDisabled(true);\n                                        removeDocSet(os.selectors);\n                                        setButtonsDisabled(false);\n                                    }}\n                                >\n                                    <IonIcon icon={trash}/>\n                                </IonButton>\n                            </IonCol>\n                        </IonRow>\n                    }\n                ) : <p className=\"no_content\"><IonText color=\"primary\">No Content Stored Locally</IonText></p>\n            }\n        </IonGrid>\n    );\n};\n\nexport default RemoveLocal;\n","import React, {useContext, useEffect} from \"react\";\nimport {IonButton, IonCol, IonGrid, IonIcon, IonLabel, IonRow} from '@ionic/react';\nimport {download, trash} from \"ionicons/icons\";\n\nimport AddRemote from \"./AddRemote\";\nimport RemoveLocal from \"./RemoveLocal\";\nimport PkContext from \"../../contexts/PkContext\";\n\nconst StorageSettings = ({loadUuid, setLoadUuid, toImport, setToImport, currentDocSet, setCurrentDocSet, currentBookCode, setCurrentBookCode}) => {\n    const [selectedSection, setSelectedSection] = React.useState('remote');\n    const [loadedDocSets, setLoadedDocSets] = React.useState([]);\n\n    const pk = useContext(PkContext);\n\n    useEffect(() => {\n        const doQuery = async () => {\n            const res = await pk.gqlQuery('{ docSets { selectors { key value } } }');\n            const selectors = res.data.docSets.map(ds => ds.selectors.map(s => s.value));\n            setLoadedDocSets(selectors);\n        };\n        doQuery();\n    }, [loadUuid, toImport, loadUuid]);\n\n    return <>\n        <IonGrid>\n            <IonRow>\n                <IonCol className=\"ion-text-center\">\n                    <IonButton\n                        fill={selectedSection === 'remote' ? \"solid\" : \"clear\"}\n                        expand=\"full\"\n                        onClick={() => setSelectedSection('remote')}\n                    >\n                        <IonIcon icon={download}/>&nbsp;\n                        <IonLabel>Add from Server</IonLabel>\n                    </IonButton>\n                </IonCol>\n                <IonCol className=\"ion-text-center\">\n                    <IonButton\n                        fill={selectedSection === 'local' ? \"solid\" : \"clear\"}\n                        expand=\"full\"\n                        onClick={() => setSelectedSection('local')}\n                    >\n                        <IonIcon icon={trash}/>&nbsp;\n                        <IonLabel>Remove from Local</IonLabel>\n                    </IonButton>\n                </IonCol>\n            </IonRow>\n            <IonRow>\n                <IonCol>\n                    {\n                        selectedSection === 'remote' &&\n                        <AddRemote\n                            loadUuid={loadUuid}\n                            setLoadUuid={setLoadUuid}\n                            toImport={toImport}\n                            setToImport={setToImport}\n                            loadedDocSets={loadedDocSets}\n                        />\n                    }\n                    {\n                        selectedSection === 'local' &&\n                        <RemoveLocal\n                            loadUuid={loadUuid}\n                            setLoadUuid={setLoadUuid}\n                            toImport={toImport}\n                            setToImport={setToImport}\n                            loadedDocSets={loadedDocSets}\n                            currentDocSet={currentDocSet}\n                            setCurrentDocSet={setCurrentDocSet}\n                            currentBookCode={currentBookCode}\n                            setCurrentBookCode={setCurrentBookCode}\n                        />\n                    }\n                </IonCol>\n            </IonRow>\n        </IonGrid>\n    </>\n}\n\nexport default StorageSettings;\n","import { IonTitle } from '@ionic/react';\n\nconst AppearanceSettings = () => <IonTitle>Appearance Settings</IonTitle>\n\nexport default AppearanceSettings;\n","import React, {useContext, useEffect} from 'react';\nimport {IonButton, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonLabel, IonPage, IonRow} from '@ionic/react';\nimport './SettingsTab.css';\nimport StorageSettings from './StorageSettings';\nimport AppearanceSettings from './AppearanceSettings';\n\nimport PageToolBar from \"../../components/PageToolBar\";\nimport {albums, brush} from \"ionicons/icons\";\n\nconst SettingsTab = ({\n                         loadUuid,\n                         setLoadUuid,\n                         toImport,\n                         setToImport,\n                         currentDocSet,\n                         setCurrentDocSet,\n                         currentBookCode,\n                         setCurrentBookCode\n                     }) => {\n    const [selectedSection, setSelectedSection] = React.useState('storage');\n    return (\n        <IonPage>\n            <IonHeader>\n                <PageToolBar pageTitle=\"Settings\"/>\n            </IonHeader>\n            <IonContent fullscreen>\n                <IonGrid>\n                    <IonRow>\n                        <IonCol className=\"ion-text-center\">\n                            <IonButton\n                                fill=\"clear\"\n                                strong={selectedSection === 'storage'}\n                                onClick={() => setSelectedSection('storage')}\n                            >\n                                <IonIcon icon={albums}/>&nbsp;\n                                <IonLabel>Storage</IonLabel>\n                            </IonButton>\n                        </IonCol>\n                        <IonCol className=\"ion-text-center\">\n                            <IonButton\n                                fill=\"clear\"\n                                strong={selectedSection === 'appearance'}\n                                onClick={() => setSelectedSection('appearance')}\n                            >\n                                <IonIcon icon={brush}/>&nbsp;\n                                <IonLabel>Appearance</IonLabel>\n                            </IonButton>\n                        </IonCol>\n                    </IonRow>\n                    <IonRow>\n                        <IonCol>\n                            {\n                                selectedSection === 'storage' &&\n                                <StorageSettings\n                                    loadUuid={loadUuid}\n                                    setLoadUuid={setLoadUuid}\n                                    toImport={toImport}\n                                    setToImport={setToImport}\n                                    currentDocSet={currentDocSet}\n                                    setCurrentDocSet={setCurrentDocSet}\n                                    currentBookCode={currentBookCode}\n                                    setCurrentBookCode={setCurrentBookCode}\n                                />\n                            }\n                            {\n                                selectedSection === 'appearance' &&\n                                <AppearanceSettings/>\n                            }\n                        </IonCol>\n                    </IonRow>\n                </IonGrid>\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default SettingsTab;\n","import React, {useContext, useEffect, useState} from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport {IonApp, IonIcon, IonLabel, IonPage, IonRouterOutlet, IonTabBar, IonTabButton, IonTabs} from '@ionic/react';\nimport {IonReactRouter} from '@ionic/react-router';\nimport {book, search, create, print} from 'ionicons/icons';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\n/* Non-ionic imports */\nimport BrowseTab from './pages/Browse/BrowseTab';\nimport SearchTab from './pages/Search/SearchTab';\nimport EditTab from './pages/Edit/EditTab';\nimport PublishTab from './pages/Publish/PublishTab';\nimport SettingsTab from './pages/Settings/SettingsTab';\nimport PkContext, {PkProvider} from './contexts/PkContext';\nimport {blocksSpecUtils} from 'proskomma';\nimport {SettingsProvider} from './contexts/SettingsContext';\nimport {DocSetsProvider} from './contexts/DocSetsContext';\n\nconst App = () => {\n    const [loadUuid, setLoadUuid] = React.useState(\"\");\n    const [toImport, setToImport] = React.useState([]);\n    const [docSets, setDocSets] = React.useState({});\n    const [currentDocSet, setCurrentDocSet] = React.useState(\"\");\n    const [currentBookCode, setCurrentBookCode] = React.useState(\"\");\n    const [selectedChapter, setSelectedChapter] = useState(null);\n    const [selectedVerses, setSelectedVerses] = useState(null);\n    const pk = useContext(PkContext);\n    const settings = {\n        enableNetworkAccess: useState(false)\n    };\n    useEffect(() => {\n        if (toImport.length > 0) {\n            const importRecord = toImport[0];\n            setToImport(toImport.slice(1));\n            if (importRecord.contentType === 'usfm') {\n                pk.importDocument(\n                    {\n                        lang: importRecord.selectors.lang,\n                        abbr: importRecord.selectors.abbr\n                    },\n                    importRecord.contentType,\n                    importRecord.content\n                );\n            } else if (importRecord.contentType === 'tsv') {\n                const addTsv = async () => {\n                    const tsvJson = blocksSpecUtils.tsvToInputBlock(importRecord.content, true);\n                    const tsvQueryContent = blocksSpecUtils.blocksSpec2Query(tsvJson);\n                    const stubUsfm =\n                        `\\\\id ${importRecord.bookCode} TSV document\\n\\\\toc1 ${importRecord.bookCode}\\n\\\\mt TSV Document for ${importRecord.bookCode}`;\n                    let query = `mutation { addDocument(` +\n                        `selectors: [{key: \"lang\", value: \"${importRecord.selectors.lang}\"}, {key: \"abbr\", value: \"${importRecord.selectors.abbr}\"}], ` +\n                        `contentType: \"usfm\", ` +\n                        `content: \"\"\"${stubUsfm}\"\"\") }`;\n                    let result = await pk.gqlQuery(query);\n                    if (!result.data || !result.data.addDocument) {\n                        console.log(`tsv doc creation for ${importRecord.bookCode} failed: ${JSON.stringify(result)}`);\n                        return;\n                    }\n                    const docSetId = `${importRecord.selectors.lang}_${importRecord.selectors.abbr}`;\n                    query = `{ docSet(id:\"${docSetId}\") { id document(bookCode:\"${importRecord.bookCode}\") { id } } }`;\n                    result = await pk.gqlQuery(query);\n                    if (!result.data || !result.data.docSet || !result.data.docSet.document) {\n                        console.log(`docSet query after tsv creation for ${importRecord.bookCode} failed: ${JSON.stringify(result)}`);\n                        return;\n                    }\n                    const docId = result.data.docSet.document.id;\n                    query = `mutation { newSequence(` +\n                        ` documentId: \"${docId}\"` +\n                        ` type: \"table\"` +\n                        ` blocksSpec: ${tsvQueryContent}` +\n                        ` graftToMain: true) }`;\n                    result = await pk.gqlQuery(query);\n                    if (result.errors) {\n                        console.log(`tsv mutation for ${importRecord.bookCode} failed: ${JSON.stringify(result)}`);\n                    }\n                }\n                addTsv().then();\n            } else if (importRecord.contentType === 'pkSerialized') {\n                pk.loadSuccinctDocSet(importRecord.content);\n                // const query = '{docSet(id:\"eng_uwta\") { documents { kvSequences { id entries(keyMatches:\"translate>>figs-exc\") { key itemGroups { scopeLabels(startsWith:\"kvField\") text } } } } } }'\n                // pk.gqlQuery(query).then(response => console.log(JSON.stringify(response.data.docSet.documents[0].kvSequences[0].entries, null, 2)));\n            } else {\n                console.log(`Unknown import contentType '${importRecord.contentType}'`)\n            }\n        }\n    }, [loadUuid, toImport]);\n\n    useEffect(() => {\n        const doQuery = async () => {\n            const res = await pk.gqlQuery('{ docSets { id selectors { key value } documents(sortedBy:\"paratext\") { id bookCode: header(id:\"bookCode\")} } }');\n            const dss = {}\n            for (const ds of res.data.docSets) {\n                const selectors = {};\n                for (const selector of ds.selectors) {\n                    selectors[selector.key] = selector.value;\n                }\n                const documents = {};\n                for (const document of ds.documents) {\n                    documents[document.bookCode] = {\n                        id: document.id,\n                    }\n                }\n                dss[ds.id] = {\n                    selectors,\n                    documents,\n                }\n            }\n            setDocSets(dss);\n            if (res.data.docSets.length > 0 && !currentDocSet) {\n                setCurrentDocSet(res.data.docSets[0].id);\n                setCurrentBookCode(res.data.docSets[0].documents[0].bookCode);\n            }\n        };\n        doQuery();\n    }, [loadUuid, toImport]);\n    return <IonApp>\n        <PkProvider value={pk}>\n            <SettingsProvider value={settings}>\n                <DocSetsProvider value={docSets}>\n                    <IonPage>\n                        <IonReactRouter>\n                            <IonTabs>\n                                <IonRouterOutlet>\n                                    <Route exact path=\"/browse\">\n                                        <BrowseTab\n                                            currentDocSet={currentDocSet}\n                                            setCurrentDocSet={setCurrentDocSet}\n                                            currentBookCode={currentBookCode}\n                                            selectedChapter={selectedChapter}\n                                            selectedVerses={selectedVerses}\n                                            currentDocId={docSets[currentDocSet] && docSets[currentDocSet].documents[currentBookCode] ? docSets[currentDocSet].documents[currentBookCode].id : \"\"}\n                                            setCurrentBookCode={setCurrentBookCode}\n                                            setSelectedChapter={setSelectedChapter}\n                                            setSelectedVerses={setSelectedVerses}\n                                        />\n                                    </Route>\n                                    <Route exact path=\"/search\">\n                                        <SearchTab\n                                            currentDocSet={currentDocSet}\n                                            setCurrentBookCode={setCurrentBookCode}\n                                            setSelectedChapter={setSelectedChapter}\n                                            setSelectedVerses={setSelectedVerses}\n                                        />\n                                    </Route>\n                                    <Route exact path=\"/edit\">\n                                        <EditTab/>\n                                    </Route>\n                                    <Route exact path=\"/publish\">\n                                        <PublishTab/>\n                                    </Route>\n                                    <Route exact path=\"/settings\">\n                                        <SettingsTab\n                                            loadUuid={loadUuid}\n                                            setLoadUuid={setLoadUuid}\n                                            toImport={toImport}\n                                            setToImport={setToImport}\n                                            currentDocSet={currentDocSet}\n                                            setCurrentDocSet={setCurrentDocSet}\n                                            currentBookCode={currentBookCode}\n                                            setCurrentBookCode={setCurrentBookCode}\n                                        />\n                                    </Route>\n                                    <Route render={() => <Redirect to=\"/browse\"/>}/>\n                                </IonRouterOutlet>\n                                <IonTabBar slot=\"bottom\">\n                                    <IonTabButton tab=\"browse\" href=\"/browse\">\n                                        <IonIcon icon={book}/>\n                                        <IonLabel>Browse</IonLabel>\n                                    </IonTabButton>\n                                    <IonTabButton tab=\"search\" href=\"/search\">\n                                        <IonIcon icon={search}/>\n                                        <IonLabel>Search</IonLabel>\n                                    </IonTabButton>\n                                    <IonTabButton tab=\"edit\" href=\"/edit\">\n                                        <IonIcon icon={create}/>\n                                        <IonLabel>Edit</IonLabel>\n                                    </IonTabButton>\n                                    <IonTabButton tab=\"publish\" href=\"/publish\">\n                                        <IonIcon icon={print}/>\n                                        <IonLabel>Publish</IonLabel>\n                                    </IonTabButton>\n                                </IonTabBar>\n                            </IonTabs>\n                        </IonReactRouter>\n                    </IonPage>\n                </DocSetsProvider>\n            </SettingsProvider>\n        </PkProvider>\n    </IonApp>\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}